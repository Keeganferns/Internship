rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && request.auth.token.email == 'admin@govstay.goa.gov.in';
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Hotels collection - Readable by all users (public), writable by admin only
    match /hotels/{hotelId} {
      allow read: if true;
      allow update: if isAuthenticated() && 
        request.resource.data.diff(resource.data).affectedKeys().hasAny(['rooms', 'images']);
      allow write: if isAdmin();
    }
    
    // Bookings collection - Users can read/write their own bookings, admin can read/write all
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) || isAdmin()
      );
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && (
        isOwner(resource.data.userId) || isAdmin()
      );
    }
    
    // Users collection - Users can read/write their own profile, admin can read all
    match /users/{userId} {
      allow read: if isAuthenticated() && (
        isOwner(userId) || isAdmin()
      );
      allow write: if isAuthenticated() && isOwner(userId);
    }
    
    // Admin settings collection - Admin only
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 